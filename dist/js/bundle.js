(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

$(document).ready(function () {
  var itemsMainDiv = '.MultiCarousel';
  var itemsDiv = '.MultiCarousel-inner';
  var itemWidth = "";
  $('.leftLst, .rightLst').click(function () {
    var condition = $(this).hasClass("leftLst");
    if (condition) click(0, this);else click(1, this);
  });
  ResCarouselSize();
  $(window).resize(function () {
    ResCarouselSize();
  }); //this function define the size of the items

  function ResCarouselSize() {
    var incno = 0;
    var dataItems = "data-items";
    var itemClass = '.item';
    var id = 0;
    var btnParentSb = '';
    var itemsSplit = '';
    var sampwidth = $(itemsMainDiv).width();
    var bodyWidth = $('body').width();
    $(itemsDiv).each(function () {
      id = id + 1;
      var itemNumbers = $(this).find(itemClass).length;
      btnParentSb = $(this).parent().attr(dataItems);
      itemsSplit = btnParentSb.split(',');
      $(this).parent().attr("id", "MultiCarousel" + id);

      if (bodyWidth >= 1200) {
        incno = itemsSplit[3];
        itemWidth = sampwidth / incno;
      } else if (bodyWidth >= 992) {
        incno = itemsSplit[2];
        itemWidth = sampwidth / incno;
      } else if (bodyWidth >= 768) {
        incno = itemsSplit[1];
        itemWidth = sampwidth / incno;
      } else {
        incno = itemsSplit[0];
        itemWidth = sampwidth / incno;
      }

      $(this).css({
        'transform': 'translateX(0px)',
        'width': itemWidth * itemNumbers
      });
      $(this).find(itemClass).each(function () {
        $(this).outerWidth(itemWidth);
      });
      $(".leftLst").addClass("over");
      $(".rightLst").removeClass("over");
    });
  } //this function used to move the items


  function ResCarousel(e, el, s) {
    var leftBtn = '.leftLst';
    var rightBtn = '.rightLst';
    var translateXval = '';
    var divStyle = $(el + ' ' + itemsDiv).css('transform');
    var values = divStyle.match(/-?[\d\.]+/g);
    var xds = Math.abs(values[4]);

    if (e == 0) {
      translateXval = parseInt(xds) - parseInt(itemWidth * s);
      $(el + ' ' + rightBtn).removeClass("over");

      if (translateXval <= itemWidth / 2) {
        translateXval = 0;
        $(el + ' ' + leftBtn).addClass("over");
      }
    } else if (e == 1) {
      var itemsCondition = $(el).find(itemsDiv).width() - $(el).width();
      translateXval = parseInt(xds) + parseInt(itemWidth * s);
      $(el + ' ' + leftBtn).removeClass("over");

      if (translateXval >= itemsCondition - itemWidth / 2) {
        translateXval = itemsCondition;
        $(el + ' ' + rightBtn).addClass("over");
      }
    }

    $(el + ' ' + itemsDiv).css('transform', 'translateX(' + -translateXval + 'px)');
  } //It is used to get some elements from btn


  function click(ell, ee) {
    var Parent = "#" + $(ee).parent().attr("id");
    var slide = $(Parent).attr("data-slide");
    ResCarousel(ell, Parent, slide);
  } //address validations
  //On click any <h3> within the container


  $("#accordion").accordion(); //special offer tabs

  $(document).ready(function () {
    $('.tab_inner li').click(function (e) {
      $('.tab_inner li.active').removeClass('active');
      $(this).addClass('active');
      var bookbuttonfirst = document.querySelector('.new_product');
      var bookbuttonsecond = document.querySelector('.besseller_product');
      var bookbuttonthird = document.querySelector('.feature_product');

      if (bookbuttonfirst.classList.contains('active')) {
        document.querySelector('.flex_container_parent').style.transform = 'translateX(0%)';
      } else if (bookbuttonsecond.classList.contains('active')) {
        document.querySelector('.flex_container_parent').style.transform = 'translateX(-100%)';
      } else {
        document.querySelector('.flex_container_parent').style.transform = 'translateX(-200%)';
      }

      e.preventDefault();
    });
  });
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
